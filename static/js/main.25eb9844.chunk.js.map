{"version":3,"sources":["components/button.tsx","components/input.tsx","MainList.tsx","state.ts","components/EnWordList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","props","onClick","callback","name","InputField","title","changeTitle","onKeyPressAddTask","style","width","value","placeholder","onChange","onKeyPress","MainList","enWordElement","translateWord","checkAnswer","answer","stateOfWords","enWord","rusWord","rusWord2","rusWord3","EnWordList","nextEnWordElement","App","firstWord","useState","word","setWord","random","Math","floor","length","newWord","console","log","setTranslateWord","setAnswerEl","answerEl","map","t","toLowerCase","trim","filter","Boolean","color","className","event","key","currentTarget","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25eb9844.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype TypeButtonProps = {\r\n    name: string\r\n    callback: () => void\r\n}\r\nexport const Button = (props: TypeButtonProps) => {\r\n    const onClickHandler = () => {\r\n        props.callback()\r\n    }\r\n    return (\r\n        <button onClick={onClickHandler}>{props.name}</button>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    title: string\r\n    changeTitle: (event: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPressAddTask: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const InputField = ({title, changeTitle, onKeyPressAddTask, ...props}: InputPropsType) => {\r\n\r\n    return (\r\n        <input\r\n            style={{width: '230px'}}\r\n            value={title}\r\n            placeholder='введи перевод'\r\n            onChange={changeTitle}\r\n            onKeyPress={onKeyPressAddTask}\r\n        />\r\n\r\n    )\r\n\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {Button} from \"./components/button\";\r\nimport {InputField} from \"./components/input\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    enWordElement: JSX.Element[]\r\n    translateWord: string\r\n    onKeyPressAddTask: (event: React.KeyboardEvent<HTMLInputElement>) => void\r\n    changeTitle: (event: ChangeEvent<HTMLInputElement>) => void\r\n    checkAnswer: () => void\r\n    answer: JSX.Element\r\n\r\n}\r\nexport type StateType = {\r\n    enWord: string\r\n    rusWord: string\r\n    rusWord2?: string\r\n    rusWord3?: string\r\n}\r\n\r\nexport function MainList(props: PropsType) {\r\n\r\n    return (<div>\r\n            <h3>{props.title}</h3>\r\n            <div>{props.enWordElement}</div>\r\n            <div> -----------------------------------------</div>\r\n            <div>\r\n                <InputField title={props.translateWord}\r\n                            onKeyPressAddTask={props.onKeyPressAddTask}\r\n                            changeTitle={props.changeTitle}/>\r\n\r\n                <Button name={'проверь'} callback={props.checkAnswer}/>\r\n                {props.answer}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {StateType} from \"./MainList\";\r\n\r\nexport let stateOfWords: Array<StateType> = [\r\n\r\n    {enWord: 'embodiment', rusWord: 'воплощение', rusWord2:'олицетворение'},\r\n    {enWord: 'accomplish', rusWord: 'добиться', rusWord2:'достичь'},\r\n    {enWord: 'no way', rusWord: 'ни за что', rusWord2:'да ладно'},\r\n    {enWord: 'essential', rusWord: 'необходимо', rusWord2:'важно'},\r\n    {enWord: 'to slam', rusWord: 'хлопнуть', rusWord2:'швырнуть'},\r\n    {enWord: 'somehow', rusWord: 'некторым образом', rusWord2:'так или иначе'},\r\n    {enWord: 'box office', rusWord: 'касса', rusWord2:'кассовые сборы'},\r\n    {enWord: 'assume', rusWord: 'предположить', rusWord2:'взять на себя'},\r\n    {enWord: 'egos', rusWord: 'эго', rusWord2:'самолюбие'},\r\n    {enWord: 'to collaborate', rusWord: 'сотрудничать', rusWord2:'взаимодействовать'},\r\n    {enWord: 'contradiction', rusWord: 'противоречие', rusWord2:'несоответствие'},\r\n    {enWord: 'split up with...', rusWord: 'расстоваться с ...', rusWord2:'разводиться с ...'},\r\n    {enWord: 'interrogation', rusWord: 'допрос', rusWord2:'дознание'},\r\n    {enWord: 'to swarm', rusWord: 'роиться', rusWord2:'толпиться', rusWord3:'заполнять'},\r\n    {enWord: 'expand on a subject', rusWord: 'распространяться на тему', rusWord2:'подробнее на эту тему'},\r\n    {enWord: 'degree', rusWord: 'градус', rusWord2:'диплом', rusWord3:'научная степень'},\r\n    {enWord: 'to consider', rusWord: 'рассмотреть', rusWord2:'учесть', rusWord3:'предусмотреть'},\r\n    {enWord: 'struggle', rusWord: 'борьба', rusWord2:'драка', rusWord3:'битва'},\r\n    {enWord: 'appearance', rusWord: 'появление', rusWord2:'внешний вид', rusWord3:'матч'},\r\n    {enWord: 'hurt', rusWord: 'вред'},\r\n    {enWord: 'sucker punch', rusWord: 'удар из под тишка'},\r\n    {enWord: 'pickle juice', rusWord: 'рассол'},\r\n    {enWord: 'outskirts', rusWord: 'отшиб города'},\r\n    {enWord: 'suburb', rusWord: 'пригород'},\r\n    {enWord: 'rush hour', rusWord: 'час пик'},\r\n    {enWord: 'contemporary', rusWord: 'современный'},\r\n    {enWord: 'picturesque', rusWord: 'живописный'},\r\n    {enWord: 'fascinating', rusWord: 'очаровательный'},\r\n    {enWord: 'inner cities', rusWord: 'центр города'},\r\n    {enWord: 'conveniently located', rusWord: 'удобно расположен'},\r\n    {enWord: 'overcrowded', rusWord: 'перенаселен'},\r\n    {enWord: 'apartment blocks', rusWord: 'многоквартирный дом'},\r\n    {enWord: 'get mortgages', rusWord: 'взять ипотеку'},\r\n    {enWord: 'to pay off mortgages', rusWord: 'выплатить ипотеку'},\r\n    {enWord: 'to get stuck in a traffic jam', rusWord: 'застрять в пробке'},\r\n    {enWord: 'hectic', rusWord: 'суматошный',rusWord2:'напряженный'},\r\n    {enWord: 'get off your high horse', rusWord: 'спустись с небес на землю'},\r\n    {enWord: 'chanterelle', rusWord: 'лисички'},\r\n    {enWord: 'I`ll see you around', rusWord: 'увидимся'},\r\n    {enWord: 'What is it to me', rusWord: 'Какое мне до этого дело'},\r\n    {enWord: 'have a lot in common', rusWord: 'много общего'},\r\n    {enWord: 'get on well with somebody', rusWord: 'ладить с кем-либо'},\r\n    {enWord: 'keep in touch with', rusWord: 'поддерживать отношения'},\r\n    {enWord: 'strained relations', rusWord: 'натянутые отношения'},\r\n    {enWord: 'warm relations', rusWord: 'теплые отношения'},\r\n    {enWord: 'family gathering', rusWord: 'семейные встречи'},\r\n    {enWord: 'household chores', rusWord: 'работа по дому'},\r\n    {enWord: 'to charge somebody rent', rusWord: 'брать плату за проживание'},\r\n    {enWord: 'well-behaved', rusWord: 'воспитанный'},\r\n    {enWord: 'I don`t wanna overstay my welcome', rusWord: 'я не хочу злоупотреблять твоим гостепреимством'},\r\n    {enWord: 'Could you be more specific?', rusWord: 'Можно поконкретнее?'},\r\n    {enWord: 'Don`t be mad at me', rusWord: 'Не сердись на меня'},\r\n    {enWord: 'I don`t wanna put you in the middle of it', rusWord: 'я не хочу тебя впутывать в это'},\r\n    {enWord: 'it`s off the table', rusWord: 'это не обсуждается'},\r\n    {enWord: 'rival', rusWord: 'соперник'},\r\n    {enWord: 'bachelor party', rusWord: 'мальчишник'},\r\n    {enWord: 'long-distance relationships', rusWord: 'отношения на расстоянии'},\r\n    {enWord: 'to go out with', rusWord: 'встречаться с', rusWord2:'иметь отношения с'},\r\n    {enWord: 'naughty', rusWord: 'непослушный', rusWord2:'капризный'},\r\n    {enWord: 'competitive', rusWord: 'конкурентный'},\r\n    {enWord: 'have a crush on each other', rusWord: 'влюбиться друг в друга'},\r\n    {enWord: 'to expand', rusWord: 'расширять'},\r\n    {enWord: 'overcoming', rusWord: 'преодоление'},\r\n    {enWord: 'willing', rusWord: 'готовый',rusWord2:'согласный', rusWord3:'желающий'},\r\n    {enWord: 'ladle', rusWord: 'половник'},\r\n    {enWord: 'colander', rusWord: 'дуршлаг'},\r\n    {enWord: 'cutting board', rusWord: 'разделочная доска'},\r\n    {enWord: 'chopping board', rusWord: 'разделочная доска'},\r\n    {enWord: 'can opener', rusWord: 'консервный нож'},\r\n    {enWord: 'corkscrew', rusWord: 'штопор'},\r\n    {enWord: 'spatula', rusWord: 'лопатка',rusWord2:'лопатка для жарки'},\r\n    {enWord: 'to settle', rusWord: 'решить',rusWord2:'урегулировать'},\r\n    {enWord: 'indomitable', rusWord: 'несгибаемый',rusWord2:'неукротимый'},\r\n    {enWord: 'pull it off', rusWord: 'справиться с этим',rusWord2:'получиться'},\r\n    {enWord: 'modest', rusWord: 'скромный'},\r\n    {enWord: 'glint in the eye', rusWord: 'блеск в глазах'},\r\n    {enWord: 'martial arts', rusWord: 'боевые исскуства'},\r\n    {enWord: 'smirk', rusWord: 'ухмылка'},\r\n    {enWord: 'generous', rusWord: 'щедрый'},\r\n    {enWord: 'gamble', rusWord: 'игра',rusWord2:'риск', rusWord3:'азарт'},\r\n    {enWord: 'selfish', rusWord: 'эгоистичный'},\r\n    {enWord: 'get along with somebody', rusWord: 'ладить с кем-либо'},\r\n    {enWord: 'outgoing people', rusWord: 'общительные люди'},\r\n    {enWord: 'open minded', rusWord: 'широких взглядов'},\r\n    {enWord: 'narrow minded', rusWord: 'узких взглядов'},\r\n    {enWord: 'think outside the box', rusWord: 'думать нестандартно'},\r\n    {enWord: 'reserved person', rusWord: 'закрытый человек'},\r\n    {enWord: 'to achieve goals', rusWord: 'достигать цели'},\r\n    {enWord: 'to mess up', rusWord: 'испортить', rusWord2:'завалить'},\r\n    {enWord: 'book', rusWord: 'книга'},\r\n    {enWord: 'treadmill', rusWord: 'беговая дорожка'},\r\n    {enWord: 'tread', rusWord: 'шаг', rusWord2:'протектор'},\r\n    {enWord: 'keep it together', rusWord: 'держи себя в руках', rusWord2:'сохраняй спокойствие'},\r\n    {enWord: 'indifferent', rusWord: 'различный', rusWord2:'равнодушный'},\r\n    {enWord: 'tread lightly', rusWord: 'действовать осторожно'},\r\n    {enWord: 'to be ambitious', rusWord: 'быть амбициозным'},\r\n    {enWord: 'to work hard on something', rusWord: 'усердно работать над чем-либо'},\r\n    {enWord: 'to miss out', rusWord: 'пропустить'},\r\n    {enWord: 'mental', rusWord: 'психический'},\r\n    {enWord: 'to encourage to do something', rusWord: 'воодушевлять что-то сделать'},\r\n    {enWord: 'to occur', rusWord: 'происходить', rusWord2:'иметь место'},\r\n    {enWord: 'orbital bone', rusWord: 'скуловая кость'},\r\n    {enWord: 'to master different skills', rusWord: 'получать разные навыки'},\r\n    {enWord: 'to focus on something', rusWord: 'сосредоточиться на чем-то',rusWord2:'сконцентрироваться на чем-то'},\r\n    {enWord: 'to beg', rusWord: 'умолять'},\r\n    {enWord: 'corpse', rusWord: 'мертвец'},\r\n    {enWord: 'mortician', rusWord: 'гробовщик'},\r\n    {enWord: 'den', rusWord: 'логово'},\r\n    {enWord: 'thirsty', rusWord: 'жажда'},\r\n    {enWord: 'amusement', rusWord: 'развлечение'},\r\n    {enWord: 'thoughtful', rusWord: 'заботливый'},\r\n    {enWord: 'grumpy', rusWord: 'сварливый'},\r\n    {enWord: 'to scream', rusWord: 'кричать'},\r\n    {enWord: 'screwdriver', rusWord: 'отвертка'},\r\n    {enWord: 'fuse', rusWord: 'предохранитель'},\r\n    {enWord: 'to mend', rusWord: 'исправить'},\r\n    {enWord: 'commitment', rusWord: 'обязательство'},\r\n    {enWord: 'spell out', rusWord: 'сформулировать'},\r\n    {enWord: 'orphan', rusWord: 'сирота'},\r\n    {enWord: 'orphanage', rusWord: 'детский дом'},\r\n    {enWord: 'harebrained', rusWord: 'легкомысленный'},\r\n    {enWord: 'survey', rusWord: 'исследование'},\r\n    {enWord: 'think it over', rusWord: 'обдумать'},\r\n    {enWord: 'to deserve', rusWord: 'заслужить'},\r\n    {enWord: 'slump', rusWord: 'спад'},\r\n    {enWord: 'to wander', rusWord: 'блуждать'},\r\n    {enWord: 'trail', rusWord: 'след'},\r\n    {enWord: 'prairie', rusWord: 'степь'},\r\n    {enWord: 'to keep over', rusWord: 'удерживать'},\r\n    {enWord: 'to ring out', rusWord: 'прозвучать'},\r\n    {enWord: 'valley', rusWord: 'долина'},\r\n    {enWord: 'contraction', rusWord: 'сокращение'},\r\n    {enWord: 'ambien', rusWord: 'снотворное'},\r\n    {enWord: 'awesome', rusWord: 'великолепно'},\r\n    {enWord: 'unresponsive', rusWord: 'без сознания'},\r\n    {enWord: 'affirmative', rusWord: 'позитивный'},\r\n    {enWord: 'malfunction', rusWord: 'неисправность', rusWord2:'поломка'},\r\n    {enWord: 'determination', rusWord: 'определение'},\r\n    {enWord: 'immutable', rusWord: 'неизменный'},\r\n    {enWord: 'immutability', rusWord: 'неизменность'},\r\n    {enWord: 'to terminate', rusWord: 'прервать'},\r\n    {enWord: 'to shatter', rusWord: 'разрушить'},\r\n    {enWord: 'wind', rusWord: 'ветер'},\r\n    {enWord: 'to wind up', rusWord: 'закончить', rusWord2:'занести'},\r\n    {enWord: 'suing', rusWord: 'судиться'},\r\n    {enWord: 'to lash', rusWord: 'хлестать'},\r\n    {enWord: 'lash', rusWord: 'плеть'},\r\n    {enWord: 'to lash out', rusWord: 'наброситься'},\r\n    {enWord: 'closure', rusWord: 'закрытие'},\r\n    {enWord: 'brown-nosing', rusWord: 'подлиза'},\r\n    {enWord: 'scale', rusWord: 'масштаб'},\r\n    {enWord: 'to prosecute', rusWord: 'привлекать к суду'},\r\n    {enWord: 'to parse', rusWord: 'анализировать'},\r\n    {enWord: 'to accuse', rusWord: 'обвинять'},\r\n    {enWord: 'response', rusWord: 'реакция', rusWord2:'ответ'},\r\n    {enWord: 'to show up', rusWord: 'появиться', rusWord2:'явиться', rusWord3:'придти'},\r\n    {enWord: 'pity', rusWord: 'жалость'},\r\n    {enWord: 'bride', rusWord: 'невеста'},\r\n    {enWord: 'to insist', rusWord: 'настаивать', rusWord2:'требовать'},\r\n    {enWord: 'horrendous', rusWord: 'ужасный'},\r\n    {enWord: 'otherwise', rusWord: 'иначе'},\r\n\r\n]","import React from \"react\";\r\nimport {Button} from \"./button\";\r\n\r\nexport const EnWordList = (props: { nextEnWordElement: () => void }) => {\r\n    return (\r\n        <div>\r\n            <Button name={'next word'} callback={props.nextEnWordElement}/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport './App.css';\r\nimport {MainList, StateType} from \"./MainList\";\r\nimport {stateOfWords} from \"./state\";\r\nimport {EnWordList} from \"./components/EnWordList\";\r\n\r\nfunction App() {\r\n    let firstWord = [stateOfWords[0]]\r\n    const [word, setWord] = useState<Array<StateType>>(firstWord)\r\n    const nextEnWordElement = () => {\r\n        let random = Math.floor(Math.random() * stateOfWords.length)\r\n        let newWord = stateOfWords[random]\r\n        console.log(newWord)\r\n        setWord([newWord])\r\n        setTranslateWord('')\r\n        setAnswerEl('')\r\n    }\r\n    const [translateWord, setTranslateWord] = useState<string>('')\r\n    const [answerEl, setAnswerEl] = useState('')\r\n    const checkAnswer = () => {\r\n        let rusWord: Array<Array<string | undefined>> = word.map(t => [t.rusWord, t.rusWord2, t.rusWord3])\r\n        if (translateWord.toLowerCase().trim() === rusWord[0][0]\r\n            || translateWord.toLowerCase().trim() === rusWord[0][1]\r\n            || translateWord.toLowerCase().trim() === rusWord[0][2]) {\r\n\r\n            setAnswerEl('ПРАВИЛЬНО!!!')\r\n\r\n        } else {\r\n            let answer = rusWord[0].filter(Boolean)\r\n            setAnswerEl(` ${answer}`)\r\n\r\n        }\r\n    }\r\n    const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTranslateWord(event.currentTarget.value)\r\n        setAnswerEl('')\r\n    }\r\n    const onKeyPressAddTask = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            checkAnswer()\r\n\r\n        }\r\n    }\r\n    const enWordElement = word.map(t => {\r\n        {\r\n            return (\r\n                <div>\r\n                    {`${t.enWord} `}\r\n                    <span>\r\n                    <EnWordList nextEnWordElement={nextEnWordElement}/>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    const fixAnswer = 'Неправильно, иди учи. Правильный вариант:'\r\n\r\n    const answer = answerEl !== 'ПРАВИЛЬНО!!!' && answerEl !== ''\r\n        ? <div style={{color: 'red'}}>{fixAnswer} <br></br>\r\n            <div style={{color: 'blue'}}>{answerEl}</div>\r\n        </div>\r\n        : <div style={{color: 'green'}}>{answerEl}</div>\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MainList title={'Learn English'}\r\n                      enWordElement={enWordElement}\r\n                      translateWord={translateWord}\r\n                      onKeyPressAddTask={onKeyPressAddTask}\r\n                      changeTitle={changeTitle}\r\n                      checkAnswer={checkAnswer}\r\n                      answer={answer}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}